// <auto-generated />
using System;
using BurgerMVCProject.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240120142157_burgermvcDB4")]
    partial class burgermvcDB4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Addresses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "e8e6554a-d02f-4f39-b137-f0fb2c88491e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29e31c86-a6ce-4ad7-b097-c368530d1526",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN",
                            Password = "Qwe.123",
                            PasswordHash = "AQAAAAEAACcQAAAAEHJ1zhDNnL0mftjhblrRBRSsXwxkUf7vPpiq3ZqtUYydpiVKJG1pNqyOWPYxJFxPyw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = "83bcdd6f-fe6d-48cc-a8af-f3cde0fea281",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "74977b27-3640-4cfd-aced-4ae22dd16caf",
                            Email = "john.doe@example.com",
                            EmailConfirmed = true,
                            FirstName = "John",
                            LastName = "Doe",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN.DOE@EXAMPLE.COM",
                            NormalizedUserName = "JOHN_DOE",
                            Password = "P@ssword!",
                            PasswordHash = "AQAAAAEAACcQAAAAELlHA0OI2fNYXhJ4f0obL85N/JXSZsKlD8uTjR7uQX8f+a60nWHAcYy8xeynBvVlHQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "John_Doe"
                        });
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.ExtraProduct", b =>
                {
                    b.Property<int>("ExtraProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExtraProductId"), 1L, 1);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ExtraProductId");

                    b.HasIndex("MenuId");

                    b.ToTable("Extra Products", (string)null);

                    b.HasData(
                        new
                        {
                            ExtraProductId = 1,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4274),
                            ImageSrc = "DrinkPhotos/1-coca-cola-zero-sugar_30tl.png",
                            Name = "Coca-Cola Zero Sugar (33 cl)",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 2,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4300),
                            ImageSrc = "DrinkPhotos/2-coca-cola-33cl_30tl.png",
                            Name = "Coca-Cola (33 cl)",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 3,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4304),
                            ImageSrc = "DrinkPhotos/3-coca-cola-light_30tl.png",
                            Name = "Coca-Cola Light (33 cl)",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 4,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4308),
                            ImageSrc = "DrinkPhotos/4-fanta-33cl_30tl.png",
                            Name = "Fanta (33 cl)",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 5,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4312),
                            ImageSrc = "DrinkPhotos/5-fuse-tea-33cl_30tl.png",
                            Name = "Fuse Tea (33 cl)",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 6,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4315),
                            ImageSrc = "DrinkPhotos/6-sprite-33cl_30tl.png",
                            Name = "Sprite (33 cl)",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 7,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4318),
                            ImageSrc = "DrinkPhotos/7-ayran-195-ml_20tl.png",
                            Name = "Ayran (195 ml)",
                            Price = 20.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 8,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4323),
                            ImageSrc = "DrinkPhotos/8-ayran-300-ml_25tl.png",
                            Name = "Ayran (300 ml)",
                            Price = 25.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 9,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4326),
                            ImageSrc = "DrinkPhotos/9-su-15.png",
                            Name = "Water (33 cl)",
                            Price = 15.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 10,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4328),
                            ImageSrc = "DrinkPhotos/10-cay_10.png",
                            Name = "Tea",
                            Price = 10.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 11,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4333),
                            ImageSrc = "DrinkPhotos/11-Filtre-Kahve_30.png",
                            Name = "Filter Coffee",
                            Price = 30.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 12,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4337),
                            ImageSrc = "DrinkPhotos/12-Americano_40.png",
                            Name = "Americano",
                            Price = 40.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 13,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4341),
                            ImageSrc = "DrinkPhotos/13-Latte_50.png",
                            Name = "Latte",
                            Price = 50.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 14,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4345),
                            ImageSrc = "DrinkPhotos/14-Findik_Latte_55.png",
                            Name = "Hazelnut Latte",
                            Price = 55.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 15,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4349),
                            ImageSrc = "DrinkPhotos/15-Karamel_Latte_55.png",
                            Name = "Caramel Latte",
                            Price = 55.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 16,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4353),
                            ImageSrc = "DrinkPhotos/16-Chai_Tea _Latte_55.png",
                            Name = "Chai Tea Latte",
                            Price = 55.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 17,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4356),
                            ImageSrc = "DrinkPhotos/17-Cappucino_50.png",
                            Name = "Cappucino",
                            Price = 50.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 18,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4359),
                            ImageSrc = "DrinkPhotos/18-Flat_White_50.png",
                            Name = "Flat White",
                            Price = 50.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 19,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4362),
                            ImageSrc = "DrinkPhotos/19-mocha_50.png",
                            Name = "Mocha",
                            Price = 50.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 20,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4365),
                            ImageSrc = "DrinkPhotos/20-Turk_Kahvesi_45.png",
                            Name = "Turkish Coffee",
                            Price = 45.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 21,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4368),
                            ImageSrc = "DrinkPhotos/21-Sicak_cikolata_45.png",
                            Name = "Hot Chocolate",
                            Price = 45.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 22,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4370),
                            ImageSrc = "DrinkPhotos/22-iced-americano_40.png",
                            Name = "Iced Americano",
                            Price = 40.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 23,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4372),
                            ImageSrc = "DrinkPhotos/23-iced-latte_50.png",
                            Name = "Iced Latte",
                            Price = 50.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 24,
                            Category = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4376),
                            ImageSrc = "DrinkPhotos/24-iced-mocha_50.png",
                            Name = "Iced Mocha",
                            Price = 50.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 25,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4379),
                            ImageSrc = "BurgerPhotos/1-hamburger_115.png",
                            Name = "Hamburger",
                            Price = 115.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 26,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4381),
                            ImageSrc = "BurgerPhotos/2-cheeseburger_120.png",
                            Name = "Cheeseburger",
                            Price = 120.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 27,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4384),
                            ImageSrc = "BurgerPhotos/3-double_cheeseburger_155.png",
                            Name = "Double Cheeseburger",
                            Price = 155.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 28,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4388),
                            ImageSrc = "BurgerPhotos/4-mega_double_cheeseburger_250.png",
                            Name = "Mega Double Cheeseburger",
                            Price = 250.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 29,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4390),
                            ImageSrc = "BurgerPhotos/5-kofteburger_130.png",
                            Name = "Meatball Burger",
                            Price = 130.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 30,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4393),
                            ImageSrc = "BurgerPhotos/6-double_kofteburger_145.png",
                            Name = "Double Meatball Burger",
                            Price = 145.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 31,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4395),
                            ImageSrc = "BurgerPhotos/7-whopper_170.png",
                            Name = "Whopper",
                            Price = 170.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 32,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4398),
                            ImageSrc = "BurgerPhotos/8-double_whopper_235.png",
                            Name = "Double Whopper",
                            Price = 235.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 33,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4613),
                            ImageSrc = "BurgerPhotos/9-triple_whopper_280.png",
                            Name = "Triple Whopper",
                            Price = 280.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 34,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4617),
                            ImageSrc = "BurgerPhotos/10-tavukburger_100.png",
                            Name = "Chicken Burger",
                            Price = 100.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 35,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4624),
                            ImageSrc = "BurgerPhotos/11-king_chicken_burger_120.png",
                            Name = "King Chicken Burger",
                            Price = 120.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 36,
                            Category = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4628),
                            ImageSrc = "BurgerPhotos/12-double_king_chicken_150.png",
                            Name = "Double King Chicken Burger",
                            Price = 150.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 37,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4631),
                            ImageSrc = "SnacksPhotos/1-patates_kucuk_35.png",
                            Name = "French Fries Small",
                            Price = 35.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 38,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4634),
                            ImageSrc = "SnacksPhotos/2-patates_orta_40.png",
                            Name = "French Fries Medium",
                            Price = 40.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 39,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4636),
                            ImageSrc = "SnacksPhotos/3-patates_buyuk_45.png",
                            Name = "French Fries Large",
                            Price = 45.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 40,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4641),
                            ImageSrc = "SnacksPhotos/4-sogan-halkasi_8li_35.png",
                            Name = "Onion Rings (8 pieces)",
                            Price = 35.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 41,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4644),
                            ImageSrc = "SnacksPhotos/5-sogan-halkasi_12li_40.png",
                            Name = "Onion Rings (12 pieces)",
                            Price = 40.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 42,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4646),
                            ImageSrc = "SnacksPhotos/6-sogan-halkasi_16li_45.png",
                            Name = "Onion Rings (16 pieces)",
                            Price = 60.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 43,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4650),
                            ImageSrc = "SnacksPhotos/7-chicken-tenders_4lu_40.png",
                            Name = "Chicken Tenders (4 pieces)",
                            Price = 40.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 44,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4653),
                            ImageSrc = "SnacksPhotos/8-chicken-tenders_6li_55.png",
                            Name = "Chicken Tenders (6 pieces)",
                            Price = 55.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 45,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4655),
                            ImageSrc = "SnacksPhotos/9-chicken-tenders_9lu_70.png",
                            Name = "Chicken Tenders (9 pieces)",
                            Price = 70.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 46,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4659),
                            ImageSrc = "SnacksPhotos/10-nuggets_4lu_40.png",
                            Name = "Nuggets (4 pieces)",
                            Price = 40.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 47,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4661),
                            ImageSrc = "SnacksPhotos/11-nuggets_6li_55.png",
                            Name = "Nuggets (6 pieces)",
                            Price = 55.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 48,
                            Category = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4665),
                            ImageSrc = "SnacksPhotos/12-nuggets_9lu_70.png",
                            Name = "Nuggets (9 pieces)",
                            Price = 70.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 49,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4667),
                            ImageSrc = "SaucesPhotos/1-ketcap_sos_5tl.png",
                            Name = "Ketchup",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 50,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4670),
                            ImageSrc = "SaucesPhotos/2-mayonez_sos_5tl.png",
                            Name = "Mayonnaise",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 51,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4673),
                            ImageSrc = "SaucesPhotos/3-sarimsakli_mayonez_sos_5tl.png",
                            Name = "Garlic Mayonnaise",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 52,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4676),
                            ImageSrc = "SaucesPhotos/4-ranch-sos_5tl.png",
                            Name = "Ranch Sauce",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 53,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4678),
                            ImageSrc = "SaucesPhotos/5-barbeku_sos_5tl.png",
                            Name = "Barbeque Sauce",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 54,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4681),
                            ImageSrc = "SaucesPhotos/6-Aci_sos_5tl.png",
                            Name = "Hot Sauce",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 55,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4683),
                            ImageSrc = "SaucesPhotos/7-aci_hardal_sos_5tl.png",
                            Name = "Hot Mustard Sauce",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 56,
                            Category = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4687),
                            ImageSrc = "SaucesPhotos/8-buffalo_sos_5tl.png",
                            Name = "Buffalo Sauce",
                            Price = 5.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 57,
                            Category = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4690),
                            ImageSrc = "DessertPhotos/1-cikolatali-cookie_60tl.png",
                            Name = "Chocolate Cookies",
                            Price = 60.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 58,
                            Category = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4693),
                            ImageSrc = "DessertPhotos/2-cikolata-parcacikli-cookie_60tl.png",
                            Name = "Chocolate Chip Cookies",
                            Price = 60.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 59,
                            Category = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4696),
                            ImageSrc = "DessertPhotos/3-elmali-tatli-60tl.png",
                            Name = "Apple Dessert",
                            Price = 60.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 60,
                            Category = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4699),
                            ImageSrc = "DessertPhotos/4-visneli-tatli-60tl.png",
                            Name = "Cherry Dessert",
                            Price = 60.0,
                            Quantity = 0
                        },
                        new
                        {
                            ExtraProductId = 61,
                            Category = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(4703),
                            ImageSrc = "DessertPhotos/5-sufle-70tl.png",
                            Name = "Souffle",
                            Price = 70.0,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.HasIndex("OrderId");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5714),
                            Description = "Delicacy consisting of hamburger meat, small sesame sandwich bread, pickled cucumber, mustard and ketchup. Enjoy the Hamburger Menu as you wish, with delicious fries and drinks!",
                            ImageSrc = "MenuPhotos/1-hamburger-menu_145.png",
                            Name = "Hamburger Menu",
                            Price = 145.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 2,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5727),
                            Description = "Delicacy consisting of hamburger meat, small sesame sandwich bread, pickled cucumber, cheddar cheese, mustard and ketchup. Enjoy the Cheeseburger Menu as you wish, with delicious fries and drinks!",
                            ImageSrc = "MenuPhotos/2-cheeseburger_menu_150.png",
                            Name = "Cheeseburger Menu",
                            Price = 150.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 3,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5730),
                            Description = "Delicacy consisting of 2 hamburger meat, small sesame sandwich bread, pickled cucumber, 2 pieces of cheddar cheese, mustard and ketchup.",
                            ImageSrc = "MenuPhotos/3-double_cheeseburger_menu_185.png",
                            Name = "Double Cheeseburger Menu",
                            Price = 185.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 4,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5736),
                            Description = "The flavor consists of 2 Whopper meats, large sesame sandwich bread, pickled cucumber, 4 pieces of cheddar cheese, mustard and ketchup. Enjoy the Mega Double Cheeseburger Menu with delicious fries and drink as you wish!",
                            ImageSrc = "MenuPhotos/4-mega-double-cheeseburger-menu_280.png",
                            Name = "Mega Double Cheeseburger Menu",
                            Price = 280.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 5,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5739),
                            Description = "A unique combination of meatball burger meat prepared according to mother's recipe, small sesame sandwich bread, pickled cucumber, ketchup, mayonnaise and lettuce. Enjoy the Meatball Burger Menu as you wish, with delicious fries and drink!",
                            ImageSrc = "MenuPhotos/5-kofteburger_menu_160.png",
                            Name = "Meatball Burger Menu",
                            Price = 160.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 6,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5742),
                            Description = "A unique combination of 2 Meatball burger meats, cheddar cheese, small sesame sandwich bread, pickled cucumber, ketchup, mayonnaise and lettuce, prepared according to mother's recipe. Enjoy the Double Meatball Burger Menu with delicious fries and drink as you wish!",
                            ImageSrc = "MenuPhotos/6-double-kofteburger-menu_175.png",
                            Name = "Double Meatball Burger Menu",
                            Price = 175.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 7,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5746),
                            Description = "A classic consisting of Whopper meat, large sesame sandwich bread, pickled cucumber, ketchup, mayonnaise, chopped lettuce, tomato and onion. Enjoy the Whopper Menu as you wish, with delicious fries and drinks!",
                            ImageSrc = "MenuPhotos/7-whopper-menu_200.png",
                            Name = "Whopper Menu",
                            Price = 200.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 8,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5749),
                            Description = "Perfect for doubling the classic Whopper flavor with two Whopper meats, large sesame buns, pickled cucumber, ketchup, mayonnaise, chopped lettuce, tomato and onion. Enjoy the Double Whopper Menu as you wish, with delicious fries and drinks!",
                            ImageSrc = "MenuPhotos/8-double-whopper-menu_265.png",
                            Name = "Double Whopper Menu",
                            Price = 265.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 9,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5752),
                            Description = "A delicious selection consisting of 3 Whopper meats, large sesame sandwich bread, pickled cucumber, ketchup, mayonnaise, lettuce, tomato and onion. Enjoy the Triple Whopper Menu with delicious fries and drinks as you wish!",
                            ImageSrc = "MenuPhotos/9-triple-whopper-menu_310.png",
                            Name = "Triple Whopper Menu",
                            Price = 310.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 10,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5755),
                            Description = "Enjoy this extremely simple alternative consisting of chicken burger meat, small sesame sandwich bread, mayonnaise and chopped lettuce, along with delicious fries and a drink, as you wish!",
                            ImageSrc = "MenuPhotos/10-tavukburger-menu_130.png",
                            Name = "Chicken Burger Menu",
                            Price = 130.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 11,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5759),
                            Description = "Enjoy this extremely simple alternative consisting of King Chicken meat, sesame sandwich bread, mayonnaise and chopped lettuce, along with delicious fries and a drink, as you wish!",
                            ImageSrc = "MenuPhotos/11-king_chicken_burger_menu_150.png",
                            Name = "King Chicken Burger Menu",
                            Price = 150.0,
                            Quantity = 0,
                            Size = 2
                        },
                        new
                        {
                            MenuId = 12,
                            CreatedDate = new DateTime(2024, 1, 20, 17, 21, 54, 175, DateTimeKind.Local).AddTicks(5762),
                            Description = "Enjoy the classic flavor alternative consisting of 2 King Chicken meat, sesame sandwich bread, mayonnaise and chopped lettuce, along with delicious fries and a drink, as you wish!",
                            ImageSrc = "MenuPhotos/12-double-king-chicken-menu_180.png",
                            Name = "Double King Chicken Burger Menu",
                            Price = 180.0,
                            Quantity = 0,
                            Size = 2
                        });
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.ExtraProduct", b =>
                {
                    b.HasOne("BurgerMVCProject.Domain.Entities.Menu", null)
                        .WithMany("ExtraProducts")
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.Menu", b =>
                {
                    b.HasOne("BurgerMVCProject.Domain.Entities.Order", "Order")
                        .WithMany("Menus")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.Order", b =>
                {
                    b.HasOne("BurgerMVCProject.Domain.Entities.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BurgerMVCProject.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BurgerMVCProject.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerMVCProject.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BurgerMVCProject.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.Menu", b =>
                {
                    b.Navigation("ExtraProducts");
                });

            modelBuilder.Entity("BurgerMVCProject.Domain.Entities.Order", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
